{
    "contents" : "##this is for installing package to read STATA files\nlibrary(foreign)\n\n##ethnicdensity.df is name of my ethnic density database\n##read dta is the package that will read dta file. \nethnicdensity.df = read.dta(\"//Users//andreafernandes//Google Drive//Springboard_Data_Science_Course_2016//RLearning_Springboard_ProjectED//For_Excel.dta\")\n\n##selecting a first three rows and first four columns of the data\nstr(ethnicdensity.df)\n\n#install.packages(\"dplyr\")\nlibrary(\"dplyr\")\n\nED <-tbl_df(ethnicdensity.df)\ndim(ED)\n\n#ED\n#47581 X 67\n\n#print(ED, n =20)\ndata.frame(head(ED))\n\n#filter\n#filter(ED, Suicide==1)\n\n\n#count of distinct IDs\n#ED %>%\n#  summarise(n_distinct(JunkID))\n\n\n#count gender\nED %>% \n      select (Gender_Cleaned) %>%\n      group_by(Gender_Cleaned) %>%\n      summarise(GenderCount = n())\n\n\n#count gender and suicide\n\nED %>% \n  select (Gender_Cleaned, Suicide) %>%\n  group_by(Gender_Cleaned) %>%\n  summarise(GenderCount = n(), sum = sum(Suicide))\n\n\n\n#creating \"current date\"\nED %>%\n    mutate(currentdate = Sys.Date()) %>%\n      select (DOB_Cleaned, currentdate, Suicide) %>%\n        mutate(ceiling( (ageINyears = (currentdate - DOB_Cleaned)/365.35)))\n      \n#assigning age to each ID\nED %>%\n  mutate(currentdate = Sys.Date()) %>%\n    select (DOB_Cleaned, currentdate, Suicide) %>%\n      mutate(age = (currentdate - DOB_Cleaned)/365.35)\n\n#to store new variable use \"<-\"\nED <- ED %>%\n    mutate(currentdate = Sys.Date()) %>%\n        mutate(age = ceiling((currentdate - DOB_Cleaned)/365.25))\n\n#data.frame(tail(ED))\nED <- ED %>% mutate(agecategory = \n                        ifelse(age %in% 0:15, \"Children_Adolescents\", \n                        ifelse(age %in% 16:25, \"Youth\",\n                        ifelse(age %in% 26:50, \"Adult\", \n                        ifelse(age %in% 51:200, \"OlderAdult\", \"unknown\")))))\n\n#select age groups and suicide\nED %>%\n  select(agecategory, Suicide) %>%\n    group_by(agecategory) %>%\n    tally(Suicide)\n\n# i can save results of my table\nres <- ED %>%\n  select(Suicide, ethnicitycleaned) %>%\n    group_by (ethnicitycleaned) %>%\n      summarise(EthnicityCount = n(), sum = sum(Suicide))\n#save results as csv\n#write.csv(res, file=\"res.csv\")\n\n#to view results in the browser tab\n#View(res)\n      \n#to view results in console \n#res\n\n#to view results in console; another way\nprint(res)\n\n\n # this bit does counts of Suicide by each ethnic group\n  ED %>%\n  select(Suicide, ethnicitycleaned) %>%\n  group_by (ethnicitycleaned) %>%\n  tally()\n\n  \n#ETHNIC density scores\nED <- ED %>% \n  #Rename each ethnic density column\n      rename(WhiteBrit_ED  = G , WhiteIrish_ED = White_Irish_Percentage, OtherWhite_ED = White_Other_White_GypsyIrishTrav, \n             WhiteBlackCaribbean_ED = P, WhiteBlackAfrican_ED = R, WhiteAsian_ED = T, OtherMixed_ED = V, BritIndian_ED = Asian_Asian_British_Indian_Perce, \n             BritPakistani_ED = Asian_Asian_British_Pakistani_Pe, BritBangladeshi_ED = AB, BritChinese_ED = Asian_Asian_British_Chinese_Perc, \n             OtherAsian_ED = Asian_Asian_British_OtherAsian_P, African_ED = AH, Caribbean_ED =  AJ, OtherBlack_ED = AL) %>%\n  #get rid of ethnic density counts columns\n            select(-All_Usual_Residents, -White_English_Welsh_Scottish_Nor, -White_Irish_Count, -White_Gypsy_Irish_Traveller_Coun, \n                   -White_Gypsy_Irish_Traveller_Perc, -White_Other_White_Count, -White_Other_White_Percentage, -Mixed_Multiple_Ethnic_Groups_Whi, \n                   -S, -Mixed_Multiple_Ethnic_Groups_Oth,\n                   -Asian_Asian_British_Indian_Count, -Asian_Asian_British_Pakistani_Co, \n                   -Asian_Asian_British_Bangladeshi_, -Asian_Asian_British_Chinese_Coun, \n                   -Asian_Asian_British_OtherAsian_C,\n                   -Black_African_Caribbean_BlackBr, -Black_African_Caribbean_Black_Br,  -AK, \n                   -Other_Ethnic_Group_Arab_Count, -Other_Ethnic_Group_Arab_Percenta, -Other_Ethnic_Group_AnyOtherEthni, -AP) \n\n#checking new vars\n#data.frame(tail(ED))\n\n\n#assign (and store) each ID with their own ethnic density percentage based on their ethnicity\n#e.g. if ID is caribbean, then assign Caribbean_ED value.\nED <- ED %>% mutate(ethnicdensityscore = ifelse(ethnicitycleaned == \"British (A)\", WhiteBrit_ED, \n                          ifelse(ethnicitycleaned == \"African (N)\", African_ED, \n                          ifelse(ethnicitycleaned == \"Irish (B)\", WhiteIrish_ED, \n                          ifelse(ethnicitycleaned == \"Any other Asian background (L)\", OtherAsian_ED, \n                          ifelse(ethnicitycleaned == \"Any other black background (P)\", OtherBlack_ED,\n                          ifelse(ethnicitycleaned == \"Any other mixed background (G)\", OtherMixed_ED,\n                          ifelse(ethnicitycleaned == \"Any other white background (C)\", OtherWhite_ED,\n                          ifelse(ethnicitycleaned == \"Bangladeshi (K)\", BritBangladeshi_ED, \n                          ifelse(ethnicitycleaned == \"Caribbean (M)\", Caribbean_ED,\n                          ifelse(ethnicitycleaned == \"Chinese (R)\", BritChinese_ED,\n                          ifelse(ethnicitycleaned == \"Indian (H)\", BritIndian_ED,\n                          ifelse(ethnicitycleaned == \"Pakistani (J)\", BritPakistani_ED,\n                          ifelse(ethnicitycleaned == \"White and Asian (F)\", WhiteAsian_ED,\n                          ifelse(ethnicitycleaned == \"White and Black African (E)\", WhiteBlackAfrican_ED,\n                          ifelse(ethnicitycleaned == \"White and black Caribbean (D)\", WhiteBlackCaribbean_ED,  \" \" )))))))))))))))) %>%\n              mutate(ethnicdensityscore = as.numeric(ethnicdensityscore)) %>%\n             group_by(ethnicitycleaned)\n  \n#to summarise ethnic density(ED) scores  \n  ED_summarise_output <- ED %>% summarise(Min = min(ethnicdensityscore, na.rm=TRUE),\n            Median = median(ethnicdensityscore, na.rm=TRUE),\n            Mean = mean(ethnicdensityscore, na.rm=TRUE),\n            Var = var(ethnicdensityscore, na.rm=TRUE),\n            SD = sd(ethnicdensityscore, na.rm=TRUE),\n            Max = max(ethnicdensityscore, na.rm=TRUE),\n            N = n())\n  \nprint(ED_summarise_output)\n",
    "created" : 1454935573124.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1293146839",
    "id" : "6122574A",
    "lastKnownWriteTime" : 1456839424,
    "path" : "~/Desktop/Google Drive/Springboard_Data_Science_Course_2016/RLearning_Springboard_ProjectED/Script.R",
    "project_path" : "Script.R",
    "properties" : {
        "notebook_format" : "html_document"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}