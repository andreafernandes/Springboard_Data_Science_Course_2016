mutate(diagnosisdate = as.Date(diagnosis_date, format = "%d/%m/%y")) %>%
mutate(dateofdeath = as.Date(ons_date_of_death, format = "%d/%m/%y")) %>%
#Then create age at diagnosis and age at Suicide using simple substractions
mutate(ageatdiagnosis = year(diagnosisdate) - year(dateofbirth)) %>%
mutate(ageatSuicide = year(dateofdeath) - year(dateofbirth)) %>%
#Then create an age category group
mutate(agegroups = ifelse(ageatdiagnosis %in% 0:17, "0-17",
ifelse(ageatdiagnosis %in% 18:25, "18-25",
ifelse(ageatdiagnosis %in% 26:40, "26-40",
ifelse(ageatdiagnosis %in% 41:60, "41-60",
ifelse(ageatdiagnosis %in% 61:104, "61-100",  "unknown"))))))
table(EDAge$ageatdiagnosis)
#looks ok
table(EDAge$diagnosisdate)
#looks ok
table(EDAge$dateofbirth)
#looks ok
save(EDAge, file = "EDBoxPlotsTEST.Rdata")
data.frame(tail(EDAge))
#Selecting a few variables from previous EDscores database to clean old and create new date and age variables
EDAge <- EDscores %>%
#First format necessary date variables to make sure they are in date format
mutate(dateofbirth = as.Date(DOB_Cleaned, format = "%d/%m/%y")) %>%
mutate(diagnosisdate = as.Date(diagnosis_date, format = "%d/%m/%y")) %>%
mutate(dateofdeath = as.Date(ons_date_of_death, format = "%d/%m/%y")) %>%
#Then create age at diagnosis and age at Suicide using simple substractions
mutate(ageatdiagnosis = year(diagnosisdate) - year(dateofbirth)) %>%
mutate(ageatSuicide = year(dateofdeath) - year(dateofbirth)) %>%
#Then create an age category group
mutate(agegroups = ifelse(ageatdiagnosis %in% 0:17, "0-17",
ifelse(ageatdiagnosis %in% 18:25, "18-25",
ifelse(ageatdiagnosis %in% 26:40, "26-40",
ifelse(ageatdiagnosis %in% 41:60, "41-60",
ifelse(ageatdiagnosis %in% 61:104, "61-100",  "unknown"))))))
#checking if any of the age values are odd or non-numeric using function "table"
table(EDAge$ageatdiagnosis)
#looks ok
table(EDAge$diagnosisdate)
#looks ok
table(EDAge$dateofbirth)
#looks ok
#disadvantage of using table function is it does not count "NA" or missing values
table(EDAge$agegroups)
#there is one unknown
#using which to find out which observation has unknonw
which(EDAge$agegroups == "unknown")
#it is row number 45501
filter(EDAge) [45501,]
filter(EDscores) [45501, 44]
#i'll leave the faulty row for now
data.frame(tail(EDAge))
save(EDAge, file = "EDBoxPlotsTEST.Rdata")
rm(list=ls())
gc()
setwd("/Users/andreafernandes/Desktop/Google Drive/Springboard_Data_Science_Course_2016/RLearning_Springboard_ProjectED/R_Springboard/")
#check chunk run
#runs ok
library(foreign)
#install.packages("lubridate")
library(lubridate)
#install.packages("dplyr")
library("dplyr", lib.loc="/usr/local/lib/R/3.2/site-library")
library("ggplot2", lib.loc="/usr/local/lib/R/3.2/site-library")
load("./EDBoxPlotsTEST.Rdata")
names(EDAge)
names(EDAge)
#Select required variables (and make a copy into ED_Spread)
ED_Spread <- EDAge %>% select(Suicide,
ons_date_of_death,
ethnicdensityscore,
LSOA_NAME,
LSOA11,
ethnicitycleaned,
TotalResidentsInLSOA,
WhiteBrit_Residents,
OtherWhite_Residents,
MixedCaribbean_Residents,
MixedAsian_Residents,
OtherMixed_Residents,
BritIndian_Residents,
BritPakistani_Residents,
BritBangladeshi_Residents,
BritChinese_Residents,
OtherAsian_Residents,
African_Residents,
Caribbean_Residents,
OtherBlack_Residents,
OtherEthnicity_Residents)
str(ED_Spread)
ED_Spread <- ED_Spread %>%
mutate (LSOA_4boroughs = ifelse(grepl("^Southw", EDLSOASummary$LSOA_NAME) %in% TRUE, "SOUTHWARK",
ifelse(grepl("^Croy", EDLSOASummary$LSOA_NAME) %in% TRUE, "CROYDON",
ifelse(grepl("^Lambe", EDLSOASummary$LSOA_NAME) %in% TRUE, "LAMBETH",
ifelse(grepl("^Lewish", EDLSOASummary$LSOA_NAME) %in% TRUE, "LEWSIHAM", "OTHER")))))
data.frame(head((ED_Spread)))
```
_Task 1_:Number of people in each of the 4 boroughs (and the Other category borough)
```{r, chunk10, print table}
table(ED_Spread$LSOA_4boroughs)
ED_Spread <- ED_Spread %>%
mutate (LSOA_4boroughs = ifelse(grepl("^Southw", ED_Spread$LSOA_NAME) %in% TRUE, "SOUTHWARK",
ifelse(grepl("^Croy", ED_Spread$LSOA_NAME) %in% TRUE, "CROYDON",
ifelse(grepl("^Lambe", ED_Spread$LSOA_NAME) %in% TRUE, "LAMBETH",
ifelse(grepl("^Lewish", ED_Spread$LSOA_NAME) %in% TRUE, "LEWSIHAM", "OTHER")))))
data.frame(head((ED_Spread)))
```
_Task 1_:Number of people in each of the 4 boroughs (and the Other category borough)
```{r, chunk10, print table}
table(ED_Spread$LSOA_4boroughs)
table(ED_Spread$Suicide) #263 deaths by suicide
table(is.na(ED_Spread$Suicide))
table(ED_Spread$ons_date_of_death)
table(is.na(ED_Spread$ons_date_of_death)) # 42271 NA values; 5310 date of deaths
table(ED_Spread$ethnicdensityscore)
table(is.na(ED_Spread$ethnicdensityscore)) #no NA values
ED_Spread <- ED_Spread %>%
mutate(ons_date_of_death = as.Date(ons_date_of_death, format = "%d/%m/%Y"))
table(is.na(ED_Spread$ons_date_of_death))
str(ED_Spread)
table(is.na(ED_Spread$DeathBy)) #there are still NAs, which need to be change to "Not Died"
ED_Spread$DeathBy[is.na(ED_Spread$DeathBy)] <- "NotDied"
ED_Spread <- ED_Spread %>%
mutate(DeathBy = ifelse(Suicide == 1, "Suicide",
ifelse(year(ons_date_of_death) > 1901 & Suicide == 0, "OtherCause", NA)))
table(is.na(ED_Spread$DeathBy)) #there are still NAs, which need to be change to "Not Died"
ED_Spread$DeathBy[is.na(ED_Spread$DeathBy)] <- "NotDied"
table(ED_Spread$DeathBy)
str(ED_Spread)
names(EDAge)
EDSpread_GP <- EDSpread
names(EDSpread_GP)
rm(list=ls())
gc()
setwd("/Users/andreafernandes/Desktop/Google Drive/Springboard_Data_Science_Course_2016/RLearning_Springboard_ProjectED/R_Springboard/")
#check chunk run
#runs ok
library(foreign)
#install.packages("lubridate")
library(lubridate)
#install.packages("dplyr")
library("dplyr", lib.loc="/usr/local/lib/R/3.2/site-library")
library("ggplot2", lib.loc="/usr/local/lib/R/3.2/site-library")
load("./EDBoxPlotsTEST.Rdata")
names(EDAge)
#Select required variables (and make a copy into ED_Spread)
ED_Spread <- EDAge %>% select(Suicide,
ons_date_of_death,
ethnicdensityscore,
LSOA_NAME,
LSOA11,
ethnicitycleaned,
TotalResidentsInLSOA,
WhiteBrit_Residents,
WhiteBrit_EDPercent,
OtherWhite_Residents,
OtherWhite_EDPercent,
MixedCaribbean_Residents,
WhiteBlackCarib_EDPercent,
MixedAsian_Residents,
WhiteAsian_EDPercent,
OtherMixed_Residents,
OtherMixed_EDPercent,
BritIndian_Residents,
BritIndian_EDPercent,
BritPakistani_Residents,
BritPakistani_EDPercent,
BritBangladeshi_Residents,
BritBangladeshi_EDPercent,
BritChinese_Residents,
BritChinese_EDPercent,
OtherAsian_Residents,
OtherAsian_EDPercent,
African_Residents,
African_EDPercent,
Caribbean_Residents,
Caribbean_EDPercent,
OtherBlack_Residents,
OtherBlack_EDPercent)
str(ED_Spread)
names(EDAge)
#Select required variables (and make a copy into ED_Spread)
ED_Spread <- EDAge %>% select(Suicide,
ons_date_of_death,
ethnicdensityscore,
LSOA_NAME,
LSOA11,
ethnicitycleaned,
TotalResidentsInLSOA,
WhiteBrit_Residents,
WhiteBrit_EDPercent,
OtherWhite_Residents,
OtherWhite_EDPercent,
MixedCaribbean_Residents,
WhiteBlackCarib_EDPercent,
MixedAsian_Residents,
WhiteAsian_EDPercent,
OtherMixed_Residents,
OtherMixed_EDPercent,
BritIndian_Residents,
BritIndian_EDPercent,
BritPakistani_Residents,
BritPakistani_EDPercent,
BritBangladeshi_Residents,
BritBangladeshi_EDPercent,
BritChinese_Residents,
BritChinese_EDPercent,
OtherAsian_Residents,
OtherAsian_EDPercent,
African_Residents,
African_EDPercent,
Caribbean_Residents,
Caribbean_EDPercent,
OtherBlack_Residents,
OtherBlack_EDPercent)
str(ED_Spread)
table(ED_Spread$LSOA_NAME)
ED_Spread <- ED_Spread %>%
mutate (LSOA_4boroughs = ifelse(grepl("^Southw", ED_Spread$LSOA_NAME) %in% TRUE, "SOUTHWARK",
ifelse(grepl("^Croy", ED_Spread$LSOA_NAME) %in% TRUE, "CROYDON",
ifelse(grepl("^Lambe", ED_Spread$LSOA_NAME) %in% TRUE, "LAMBETH",
ifelse(grepl("^Lewish", ED_Spread$LSOA_NAME) %in% TRUE, "LEWSIHAM", "OTHER")))))
data.frame(head((ED_Spread)))
table(ED_Spread$LSOA_4boroughs)
table(ED_Spread$Suicide) #263 deaths by suicide
table(is.na(ED_Spread$Suicide)) #no NA values
table(ED_Spread$ons_date_of_death)
table(is.na(ED_Spread$ons_date_of_death)) # 42271 NA values; 5310 date of deaths
table(ED_Spread$ethnicdensityscore)
table(is.na(ED_Spread$ethnicdensityscore)) #no NA values
ED_Spread <- ED_Spread %>%
mutate(ons_date_of_death = as.Date(ons_date_of_death, format = "%d/%m/%Y"))
table(is.na(ED_Spread$ons_date_of_death))
str(ED_Spread)
ED_Spread <- ED_Spread %>%
mutate(ons_date_of_death = as.Date(ons_date_of_death, format = "%d/%m/%Y"))
table(is.na(ED_Spread$ons_date_of_death))
str(ED_Spread)
ED_Spread <- ED_Spread %>%
mutate(DeathBy = ifelse(Suicide == 1, "Suicide",
ifelse(year(ons_date_of_death) > 1901 & Suicide == 0, "OtherCause", NA)))
ED_Spread <- ED_Spread %>%
mutate(DeathBy = ifelse(Suicide == 1, "Suicide",
ifelse(year(ons_date_of_death) > 1901 & Suicide == 0, "OtherCause", NA)))
ED_Spread <- ED_Spread %>%
mutate(DeathBy = ifelse(Suicide == 1, "Suicide",
ifelse(year(ons_date_of_death) > 1901 & Suicide == 0, "OtherCause", NA)))
table(is.na(ED_Spread$DeathBy)) #there are still NAs, which need to be change to "Not Died"
ED_Spread$DeathBy[is.na(ED_Spread$DeathBy)] <- "NotDied"
table(is.na(ED_Spread$DeathBy)) #there are still NAs, which need to be change to "Not Died"
ED_Spread$DeathBy[is.na(ED_Spread$DeathBy)] <- "NotDied"
table(is.na(ED_Spread$DeathBy)) #there are still NAs, which need to be change to "Not Died"
ED_Spread$DeathBy[is.na(ED_Spread$DeathBy)] <- "NotDied"
table(is.na(ED_Spread$DeathBy)) #there are still NAs, which need to be change to "Not Died"
ED_Spread$DeathBy[is.na(ED_Spread$DeathBy)] <- "NotDied"
table(ED_Spread$DeathBy)
table(ED_Spread$LSOA_4boroughs)
table(ED_Spread$DeathBy)
table(is.na(ED_Spread$ethnicdensityscore)) #no NA
ED_Spread_output <- ED_Spread %>% summarise(Min = min(ethnicdensityscore, na.rm=TRUE),
Median = median(ethnicdensityscore, na.rm=TRUE),
Mean = mean(ethnicdensityscore, na.rm=TRUE),
Var = var(ethnicdensityscore, na.rm=TRUE),
SD = sd(ethnicdensityscore, na.rm=TRUE),
Max = max(ethnicdensityscore, na.rm=TRUE),
N = n())
print(ED_Spread_output)
EDSpread_GP <- ED_Spread
names(EDSpread_GP)
qplot(LSOA_4boroughs, ethnicdensityscore, data=EDSpread_Suicide_ByBorough, geom=c("boxplot"), main="Ethnic Density Score By Borough among those who Died by Suicide", ylab="Ethnic Density scores", xlab="Main Boroughs")  + theme(axis.text.x = element_text(angle = 360, hjust = 1))
EDSpread_GP <- ED_Spread
names(EDSpread_GP)
qplot(LSOA_4boroughs, WhiteBrit_EDPercent, data=EDSpread_ByBorough, geom=c("boxplot"), main="Ethnic Density Score By Borough among those who Died by Suicide", ylab="Ethnic Density scores", xlab="Main Boroughs")  + theme(axis.text.x = element_text(angle = 360, hjust = 1))
qplot(LSOA_4boroughs, WhiteBrit_EDPercent, data=EDSpread_GP, geom=c("boxplot"), main="Ethnic Density Score By Borough among those who Died by Suicide", ylab="Ethnic Density scores", xlab="Main Boroughs")  + theme(axis.text.x = element_text(angle = 360, hjust = 1))
qplot(LSOA_4boroughs, WhiteBrit_EDPercent, data=EDSpread_GP, geom=c("boxplot"), main="White Ethnic Density Spread by Borough", ylab="Ethnic Density scores", xlab="Main Boroughs")  + theme(axis.text.x = element_text(angle = 360, hjust = 1))
qplot(LSOA_4boroughs, WhiteBrit_EDPercent, data=EDSpread_GP, geom=c("boxplot"), main="White Ethnic Density Spread by Borough", ylab="Ethnic Density scores", xlab=" ")  + theme(axis.text.x = element_text(angle = 360, hjust = 1))
table(EDSpread$ethnicitycleaned)
table(ED_Spread$DeathBy)
table(EDSpread$ethnicitycleaned)
table(ED_Spread$ethnicitycleaned)
table(ED_Spread$LSOA_4boroughs)
WhiteBritEDSpread_MH <- filter(ED_Spread, ethnicitycleaned == "British (A)")
qplot(LSOA_4boroughs, WhiteBrit_EDPercent, data=WhiteBritEDSpread_MH, geom=c("boxplot"), main="White Ethnic Density Spread by Borough", ylab="Ethnic Density scores", xlab=" ")  + theme(axis.text.x = element_text(angle = 360, hjust = 1))
qplot(LSOA_4boroughs, WhiteBrit_EDPercent, data=WhiteBritEDSpread_GP, geom=c("boxplot"), main="White Ethnic Density Spread by Borough", ylab="Ethnic Density scores", xlab=" ")  + theme(axis.text.x = element_text(angle = 360, hjust = 1))
qplot(LSOA_4boroughs, WhiteBrit_EDPercent, data=WhiteBritEDSpread_GP, geom=c("boxplot"), main="White Ethnic Density Spread by Borough", ylab="Ethnic Density scores", xlab=" ")  + theme(axis.text.x = element_text(angle = 360, hjust = 1))
WhiteBritEDSpread_GP <- ED_Spread
qplot(LSOA_4boroughs, WhiteBrit_EDPercent, data=WhiteBritEDSpread_GP, geom=c("boxplot"), main="White Ethnic Density Spread by Borough", ylab="Ethnic Density scores", xlab=" ")  + theme(axis.text.x = element_text(angle = 360, hjust = 1))
qplot(LSOA_4boroughs, WhiteBrit_EDPercent, data=WhiteBritEDSpread_GP, geom=c("boxplot"), main="White Ethnic Density Spread by Borough", ylab="Ethnic Density scores", xlab=" ")  + theme(axis.text.x = element_text(angle = 360, hjust = 1))
WhiteBritEDSpread_MH <- filter(ED_Spread, ethnicitycleaned == "British (A)")
qplot(LSOA_4boroughs, WhiteBrit_EDPercent, data=WhiteBritEDSpread_MH, geom=c("boxplot"), main="White Ethnic Density Spread by Borough", ylab="Ethnic Density scores", xlab=" ")  + theme(axis.text.x = element_text(angle = 360, hjust = 1))
table(ED_Spread$ethnicitycleaned)
table(ED_Spread$African_EDPercent)
qplot(LSOA_4boroughs, African_EDPercent, data=WhiteBritEDSpread_GP, geom=c("boxplot"), main="White Ethnic Density Spread by Borough", ylab="Ethnic Density scores", xlab=" ")  + theme(axis.text.x = element_text(angle = 360, hjust = 1))
African_EDPercent_MH <- filter(ED_Spread, ethnicitycleaned == "African (N)")
qplot(LSOA_4boroughs, African_EDPercent, data=African_EDPercent_MH, geom=c("boxplot"), main="Black Ethnic Density Spread by Borough", ylab="Ethnic Density scores", xlab=" ")  + theme(axis.text.x = element_text(angle = 360, hjust = 1))
qplot(LSOA_4boroughs, BritIndian_EDPercent, data=ED_Spread, geom=c("boxplot"), main="White Ethnic Density Spread by Borough", ylab="Ethnic Density scores", xlab=" ")  + theme(axis.text.x = element_text(angle = 360, hjust = 1))
BritIndian_EDPercent_MH <- filter(ED_Spread, ethnicitycleaned == "Indian (H)")
qplot(LSOA_4boroughs, BritIndian_EDPercent, data=BritIndian_EDPercent_MH, geom=c("boxplot"), main="Black Ethnic Density Spread by Borough", ylab="Ethnic Density scores", xlab=" ")  + theme(axis.text.x = element_text(angle = 360, hjust = 1))
qplot(LSOA_4boroughs, BritIndian_EDPercent, data=ED_Spread, geom=c("boxplot"), main="White Ethnic Density Spread by Borough", ylab="Ethnic Density scores", xlab=" ")  + theme(axis.text.x = element_text(angle = 360, hjust = 1))
qplot(LSOA_4boroughs, WhiteBrit_EDPercent, data=ED_Spread, geom=c("boxplot"), main="White Ethnic Density Spread by Borough", ylab="Ethnic Density scores", xlab=" ")  + theme(axis.text.x = element_text(angle = 360, hjust = 1))
WhiteBritEDSpread_MH <- filter(ED_Spread, ethnicitycleaned == "British (A)")
qplot(LSOA_4boroughs, WhiteBrit_EDPercent, data=WhiteBritEDSpread_MH, geom=c("boxplot"), main="White Ethnic Density Spread by Borough", ylab="Ethnic Density scores", xlab=" ")  + theme(axis.text.x = element_text(angle = 360, hjust = 1))
qplot(LSOA_4boroughs, African_EDPercent, data=ED_Spread, geom=c("boxplot"), main="Black Ethnic Density Spread by Borough", ylab="Ethnic Density scores", xlab=" ")  + theme(axis.text.x = element_text(angle = 360, hjust = 1))
African_EDPercent_MH <- filter(ED_Spread, ethnicitycleaned == "African (N)")
qplot(LSOA_4boroughs, African_EDPercent, data=African_EDPercent_MH, geom=c("boxplot"), main="Black Ethnic Density Spread by Borough", ylab="Ethnic Density scores", xlab=" ")  + theme(axis.text.x = element_text(angle = 360, hjust = 1))
qplot(LSOA_4boroughs, BritIndian_EDPercent, data=ED_Spread, geom=c("boxplot"), main="Indian Ethnic Density Spread by Borough", ylab="Ethnic Density scores", xlab=" ")  + theme(axis.text.x = element_text(angle = 360, hjust = 1))
BritIndian_EDPercent_MH <- filter(ED_Spread, ethnicitycleaned == "Indian (H)")
qplot(LSOA_4boroughs, BritIndian_EDPercent, data=BritIndian_EDPercent_MH, geom=c("boxplot"), main="Indian Ethnic Density Spread by Borough", ylab="Ethnic Density scores", xlab=" ")  + theme(axis.text.x = element_text(angle = 360, hjust = 1))
rm(list=ls())
rm(list=ls())
gc()
setwd("/Users/andreafernandes/Desktop/Google Drive/Springboard_Data_Science_Course_2016/RLearning_Springboard_ProjectED/R_Springboard/")
library(foreign)
#install.packages("lubridate")
library(lubridate)
#install.packages("dplyr")
library("dplyr", lib.loc="/usr/local/lib/R/3.2/site-library")
library("ggplot2", lib.loc="/usr/local/lib/R/3.2/site-library")
load("./EDBoxPlotsTEST.Rdata")
names(EDAge)
#Select required variables (and make a copy into ED_Spread)
ED_Spread <- EDAge %>% select(Suicide,
ons_date_of_death,
ethnicdensityscore,
LSOA_NAME,
LSOA11,
ethnicitycleaned,
TotalResidentsInLSOA,
WhiteBrit_Residents,
WhiteBrit_EDPercent,
OtherWhite_Residents,
OtherWhite_EDPercent,
MixedCaribbean_Residents,
WhiteBlackCarib_EDPercent,
MixedAsian_Residents,
WhiteAsian_EDPercent,
OtherMixed_Residents,
OtherMixed_EDPercent,
BritIndian_Residents,
BritIndian_EDPercent,
BritPakistani_Residents,
BritPakistani_EDPercent,
BritBangladeshi_Residents,
BritBangladeshi_EDPercent,
BritChinese_Residents,
BritChinese_EDPercent,
OtherAsian_Residents,
OtherAsian_EDPercent,
African_Residents,
African_EDPercent,
Caribbean_Residents,
Caribbean_EDPercent,
OtherBlack_Residents,
OtherBlack_EDPercent)
str(ED_Spread)
rm(list=ls())
gc()
```
setwd("/Users/andreafernandes/Desktop/Google Drive/Springboard_Data_Science_Course_2016/RLearning_Springboard_ProjectED/R_Springboard/")
#check chunk run
#runs ok
library(foreign)
#install.packages("lubridate")
library(lubridate)
#install.packages("dplyr")
library("dplyr", lib.loc="/usr/local/lib/R/3.2/site-library")
library("ggplot2", lib.loc="/usr/local/lib/R/3.2/site-library")
load("./EDBoxPlotsTEST.Rdata")
names(EDAge)
#Select required variables (and make a copy into ED_Spread)
ED_Spread <- EDAge %>% select(Suicide,
ons_date_of_death,
ethnicdensityscore,
LSOA_NAME,
LSOA11,
ethnicitycleaned,
TotalResidentsInLSOA,
WhiteBrit_Residents,
WhiteBrit_EDPercent,
OtherWhite_Residents,
OtherWhite_EDPercent,
MixedCaribbean_Residents,
WhiteBlackCarib_EDPercent,
MixedAsian_Residents,
WhiteAsian_EDPercent,
OtherMixed_Residents,
OtherMixed_EDPercent,
BritIndian_Residents,
BritIndian_EDPercent,
BritPakistani_Residents,
BritPakistani_EDPercent,
BritBangladeshi_Residents,
BritBangladeshi_EDPercent,
BritChinese_Residents,
BritChinese_EDPercent,
OtherAsian_Residents,
OtherAsian_EDPercent,
African_Residents,
African_EDPercent,
Caribbean_Residents,
Caribbean_EDPercent,
OtherBlack_Residents,
OtherBlack_EDPercent)
str(ED_Spread)
table(ED_Spread$LSOA_NAME)
ED_Spread <- ED_Spread %>%
mutate (LSOA_4boroughs = ifelse(grepl("^Southw", ED_Spread$LSOA_NAME) %in% TRUE, "SOUTHWARK",
ifelse(grepl("^Croy", ED_Spread$LSOA_NAME) %in% TRUE, "CROYDON",
ifelse(grepl("^Lambe", ED_Spread$LSOA_NAME) %in% TRUE, "LAMBETH",
ifelse(grepl("^Lewish", ED_Spread$LSOA_NAME) %in% TRUE, "LEWSIHAM", "OTHER")))))
data.frame(head((ED_Spread)))
table(ED_Spread$LSOA_4boroughs)
table(ED_Spread$Suicide) #263 deaths by suicide
table(is.na(ED_Spread$Suicide)) #no NA values
table(ED_Spread$ons_date_of_death)
table(is.na(ED_Spread$ons_date_of_death)) # 42271 NA values; 5310 date of deaths
table(ED_Spread$ethnicdensityscore)
table(is.na(ED_Spread$ethnicdensityscore)) #no NA values
ED_Spread <- ED_Spread %>%
mutate(ons_date_of_death = as.Date(ons_date_of_death, format = "%d/%m/%Y"))
table(is.na(ED_Spread$ons_date_of_death))
str(ED_Spread)
str(ED_Spread)
EDSpread_GP <- EDSpread %>%
select(LSOA_4boroughs, WhiteBrit_EDPercent, OtherWhite_EDPercent, WhiteBlackCarib_EDPercent, WhiteAsian_EDPercent, OtherMixed_EDPercent,
BritIndian_EDPercent,BritPakistani_EDPercent, BritBangladeshi_EDPercent, BritChinese_EDPercent, OtherAsian_EDPercent, African_EDPercent,
Caribbean_EDPercent, OtherBlack_EDPercent)
EDSpread_GP <- ED_Spread %>%
select(LSOA_4boroughs, WhiteBrit_EDPercent, OtherWhite_EDPercent, WhiteBlackCarib_EDPercent, WhiteAsian_EDPercent, OtherMixed_EDPercent,
BritIndian_EDPercent,BritPakistani_EDPercent, BritBangladeshi_EDPercent, BritChinese_EDPercent, OtherAsian_EDPercent, African_EDPercent,
Caribbean_EDPercent, OtherBlack_EDPercent)
str(EDSpread_GP)
data.frame(head(EDSpread_GP))
qplot(LSOA_4boroughs, WhiteBrit_EDPercent, data=EDSpread_GP, geom=c("boxplot"), main="White Ethnic Density Spread by Borough", ylab="Ethnic Density scores", xlab=" ") + theme(axis.text.x = element_text(angle = 360, hjust = 1))
qplot(LSOA_4boroughs, OtherMixed_EDPercent, data=EDSpread_GP, geom=c("boxplot"), main="Any other mixed race Ethnic Density Spread by Borough", ylab="Ethnic Density scores", xlab=" ") + theme(axis.text.x = element_text(angle = 360, hjust = 1))
qplot(LSOA_4boroughs, Caribbean_EDPercent, data=EDSpread_GP, geom=c("boxplot"), main="Any other mixed race Ethnic Density Spread by Borough", ylab="Ethnic Density scores", xlab=" ") + theme(axis.text.x = element_text(angle = 360, hjust = 1))
str(ED_Spread)
EDSpread_MH <- ED_Spread %>% select(ethnicdensityscore, ethnicitycleaned)
newtable <- gather(EDSpread_GP, ethnicity, ed_score, 2:14)
library("tidyr", lib.loc="/usr/local/lib/R/3.2/site-library")
newtable <- gather(EDSpread_GP, ethnicity, ed_score, 2:14)
newtable %>% tail(100)
qplot(LSOA_4boroughs, ed_score, data=newtable, geom=c("boxplot"), fill = ethnicity, main="White Ethnic Density Spread by Borough", ylab="Ethnic Density scores", xlab=" ") + theme(axis.text.x = element_text(angle = 360, hjust = 1))
qplot(LSOA_4boroughs, ethnicdensityscore, data=EDSpread_MH, geom=c("boxplot"), fill = ethnicitycleaned, main="SLAM Clinical Ethnic Density Spread by Borough", ylab="Ethnic Density scores", xlab=" ") + theme(axis.text.x = element_text(angle = 360, hjust = 1))
EDSpread_MH <- ED_Spread %>% select(LSOA_4boroughs, ethnicdensityscore, ethnicitycleaned)
qplot(LSOA_4boroughs, ethnicdensityscore, data=EDSpread_MH, geom=c("boxplot"), fill = ethnicitycleaned, main="SLAM Clinical Ethnic Density Spread by Borough", ylab="Ethnic Density scores", xlab=" ") + theme(axis.text.x = element_text(angle = 360, hjust = 1))
qplot(LSOA_4boroughs, ed_score, data=newtable, geom=c("boxplot"), fill = ethnicity, main="White Ethnic Density Spread by Borough", ylab="Ethnic Density scores", xlab=" ") + theme(axis.text.x = element_text(angle = 360, hjust = 1))
qplot(LSOA_4boroughs, ed_score, data=newtable, geom=c("boxplot"), fill = ethnicity, main="SLAM Gen pop Ethnic Density Spread by Borough", ylab="Ethnic Density scores", xlab=" ") + theme(axis.text.x = element_text(angle = 360, hjust = 1))
qplot(LSOA_4boroughs, ethnicdensityscore, data=EDSpread_MH, geom=c("boxplot"), fill = ethnicitycleaned, main="SLAM Clinical Ethnic Density Spread by Borough", ylab="Ethnic Density scores", xlab=" ") + theme(axis.text.x = element_text(angle = 360, hjust = 1))
plot(EDSpread_MH$ethnicdensityscore)
plot(EDSpread_MH$ethnicdensityscore, EDSpread_MH$ethnicdensityscore)
plot(, EDSpread_MH$ethnicdensityscore)
plot(x= n(), EDSpread_MH$ethnicdensityscore)
hist(EDSpread_MH$ethnicdensityscore)
hist(newtable$ed_score)
qplot(ethnicdensityscore, data=EDSpread_MH, geom=c("boxplot"), fill = ethnicitycleaned, main="SLAM Clinical Ethnic Density Spread by Borough", ylab="Ethnic Density scores", xlab=" ") + theme(axis.text.x = element_text(angle = 360, hjust = 1))
ED_Spread %>% summarise(Min = min(ethnicdensityscore, na.rm=TRUE),
Median = median(ethnicdensityscore, na.rm=TRUE),
Mean = mean(ethnicdensityscore, na.rm=TRUE),
Var = var(ethnicdensityscore, na.rm=TRUE),
SD = sd(ethnicdensityscore, na.rm=TRUE),
Max = max(ethnicdensityscore, na.rm=TRUE),
N = n()) %>% print()
EDSpread_MH %>% summarise(Min = min(ethnicdensityscore, na.rm=TRUE),
Median = median(ethnicdensityscore, na.rm=TRUE),
Mean = mean(ethnicdensityscore, na.rm=TRUE),
Var = var(ethnicdensityscore, na.rm=TRUE),
SD = sd(ethnicdensityscore, na.rm=TRUE),
Max = max(ethnicdensityscore, na.rm=TRUE),
N = n()) %>% print()
newtable %>% summarise(Min = min(ethnicdensityscore, na.rm=TRUE),
Median = median(ethnicdensityscore, na.rm=TRUE),
Mean = mean(ethnicdensityscore, na.rm=TRUE),
Var = var(ethnicdensityscore, na.rm=TRUE),
SD = sd(ethnicdensityscore, na.rm=TRUE),
Max = max(ethnicdensityscore, na.rm=TRUE),
N = n())
EDSpread_MH %>% summarise(Min = min(ethnicdensityscore, na.rm=TRUE),
Median = median(ethnicdensityscore, na.rm=TRUE),
Mean = mean(ethnicdensityscore, na.rm=TRUE),
Var = var(ethnicdensityscore, na.rm=TRUE),
SD = sd(ethnicdensityscore, na.rm=TRUE),
Max = max(ethnicdensityscore, na.rm=TRUE),
N = n()) %>% print()
newtable %>% summarise(Min = min(ed_score, na.rm=TRUE),
Median = median(ed_score, na.rm=TRUE),
Mean = mean(ed_score, na.rm=TRUE),
Var = var(ed_score, na.rm=TRUE),
SD = sd(ed_score, na.rm=TRUE),
Max = max(ed_score, na.rm=TRUE),
N = n()) %>% print()
```{r, cache=TRUE}
str(ED_Spread)
EDSpread_MH <- ED_Spread %>% select(LSOA_4boroughs, ethnicdensityscore, ethnicitycleaned)
qplot(LSOA_4boroughs, ethnicdensityscore, data=EDSpread_MH, geom=c("boxplot"), fill = ethnicitycleaned, main="SLAM Clinical Ethnic Density Spread by Borough", ylab="Ethnic Density scores", xlab=" ") + theme(axis.text.x = element_text(angle = 360, hjust = 1))
plot(x = n(), EDSpread_MH$ethnicdensityscore)
hist(newtable$ed_score)
hist(EDSpread_MH$ethnicdensityscore)
EDSpread_MH %>% summarise(Min = min(ethnicdensityscore, na.rm=TRUE),
Median = median(ethnicdensityscore, na.rm=TRUE),
Mean = mean(ethnicdensityscore, na.rm=TRUE),
Var = var(ethnicdensityscore, na.rm=TRUE),
SD = sd(ethnicdensityscore, na.rm=TRUE),
Max = max(ethnicdensityscore, na.rm=TRUE),
N = n()) %>% print()
newtable %>% summarise(Min = min(ed_score, na.rm=TRUE),
Median = median(ed_score, na.rm=TRUE),
Mean = mean(ed_score, na.rm=TRUE),
Var = var(ed_score, na.rm=TRUE),
SD = sd(ed_score, na.rm=TRUE),
Max = max(ed_score, na.rm=TRUE),
N = n()) %>% print()
plot(x = n(), EDSpread_MH$ethnicdensityscore)
