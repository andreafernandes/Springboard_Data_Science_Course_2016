xlab("Ethnic Density Score") +
ylab("Odds of being Known to Services Compared to Own-group Ethnic Density")
ggplot(aes(x = ethnicdensityscore, y = ratio, color = LSOA_4boroughs, data = subset(LSOAethnicdensity, LSOAsize > 9)) +
geom_jitter(aes(alpha = 1/5)) +
facet_wrap(~ethnicity, scales = "free") +
geom_hline(aes(yintercept=1), color = "red") +
theme(legend.position = "none") +
ggtitle("Patient Community Ethnic Density Score versus Ratio") +
xlab("Ethnic Density Score") +
ylab("Ratio")
)
ggplot(aes(x = ethnicdensityscore, y = ratio, color = LSOA_4boroughs), data = subset(LSOAethnicdensity, LSOAsize > 9)) +
geom_jitter(aes(alpha = 1/5)) +
facet_wrap(~ethnicity, scales = "free") +
geom_hline(aes(yintercept=1), color = "red") +
theme(legend.position = "none") +
ggtitle("Patient Community Ethnic Density Score versus Ratio") +
xlab("Ethnic Density Score") +
ylab("Ratio")
ggplot(aes(x = ethnicdensityscore, y = ratio, color = LSOA11), data = subset(LSOAethnicdensity, LSOAsize > 9)) +
geom_jitter(aes(alpha = 1/5)) +
facet_wrap(~ethnicity, scales = "free") +
geom_hline(aes(yintercept=1), color = "red") +
theme(legend.position = "none") +
ggtitle("Patient Community Ethnic Density Score versus Ratio") +
xlab("Ethnic Density Score") +
ylab("Ratio")
ggplot(aes(x = ethnicdensityscore, y = ratio, color = LSOAsize), data = subset(LSOAethnicdensity, LSOAsize > 9)) +
geom_jitter(aes(alpha = 1/5)) +
facet_wrap(~ethnicity, scales = "free") +
geom_hline(aes(yintercept=1), color = "red") +
theme(legend.position = "none") +
ggtitle("Patient Community Ethnic Density Score versus Ratio") +
xlab("Ethnic Density Score") +
ylab("Ratio")
ggplot(aes(x = ethnicdensityscore, y = ratio, color = LSOAsize), data = subset(LSOAethnicdensity, LSOAsize > 9)) +
geom_jitter(aes(alpha = 1/5)) +
facet_wrap(~ethnicity, scales = "free") +
geom_hline(aes(yintercept=1), color = "red") +
#theme(legend.position = "none") +
ggtitle("Patient Community Ethnic Density Score versus Ratio") +
xlab("Ethnic Density Score") +
ylab("Ratio")
ggplot(aes(x = ethnicdensityscore, y = ratio, size = LSOAsize), data = subset(LSOAethnicdensity, LSOAsize > 9)) +
geom_jitter(aes(alpha = 1/5)) +
facet_wrap(~ethnicity, scales = "free") +
geom_hline(aes(yintercept=1), color = "red") +
#theme(legend.position = "none") +
ggtitle("Patient Community Ethnic Density Score versus Ratio") +
xlab("Ethnic Density Score") +
ylab("Ratio")
ggplot(aes(x = ethnicdensityscore, y = ratio, size = LSOAsize, color = LSOAsize), data = subset(LSOAethnicdensity, LSOAsize > 9)) +
geom_jitter(aes(alpha = 1/5)) +
facet_wrap(~ethnicity, scales = "free") +
geom_hline(aes(yintercept=1), color = "red") +
#theme(legend.position = "none") +
ggtitle("Patient Community Ethnic Density Score versus Ratio") +
xlab("Ethnic Density Score") +
ylab("Ratio")
ggplot(aes(x = imd_score, y = ethnicdensityscore), data = edclean) +
geom_jitter() +
facet_wrap(~ethnicity)
ggplot(aes(x = imd_score, y = ethnicdensityscore), data = edclean) +
geom_jitter() +
geom_smooth() +
facet_wrap(~ethnicity)
ggplot(aes(x = ethnicdensityscore, y = imd_score), data = edclean) +
geom_jitter() +
geom_smooth() +
facet_wrap(~ethnicity)
ggplot(aes(x = imd_score, y = ethnicdensityscore), data = edclean) +
geom_jitter() +
geom_smooth() +
facet_wrap(~ethnicity, scales = "free")
ggplot(aes(x = imd_score, y = ethnicdensityscore), data = edclean) +
geom_jitter() +
geom_smooth() +
facet_wrap(LSOA_4boroughs~ethnicity, scales = "free")
ggplot(aes(x = imd_score, y = ethnicdensityscore), data = edclean) +
geom_jitter() +
geom_smooth() +
facet_wrap(ethnicity~LSOA_4boroughs, scales = "free")
by(subset(edclean, ethnicity == "White" & LSOA_4boroughs == "Lambeth")), cor.test(edclean1$imd_score, edclean1$ethnicdensityscore))
by(subset(edclean, ethnicity == "White" & LSOA_4boroughs == "Lambeth"), cor.test(edclean1$imd_score, edclean1$ethnicdensityscore))
by(subset(edclean, ethnicity == "White" & LSOA_4boroughs == "Lambeth"), cor.test(edclean$imd_score, edclean$ethnicdensityscore))
by(subset(edclean, ethnicity == "White" & edclean$LSOA_4boroughs == "Lambeth"), cor.test(edclean$imd_score, edclean$ethnicdensityscore))
by(subset(edclean, ethnicity == "White" & LSOA_4boroughs == "Lambeth"), cor.test(imd_score, ethnicdensityscore))
by(subset(edclean, ethnicity == "White" & LSOA_4boroughs == "Lambeth"), cor.test(edclean$imd_score, ethnicdensityscore))
by(subset(edclean, ethnicity == "White" & LSOA_4boroughs == "Lambeth"), cor.test(edclean$imd_score, edclean$ethnicdensityscore))
by(subset(edclean, ethnicity == "White"), cor.test(edclean$imd_score, edclean$ethnicdensityscore))
with(subset(edclean, ethnicity == "Caribbean"), cor.test(imd_score, ethnicdensityscore))
with(subset(edclean, ethnicity == "Caribbean" & LSOA_4boroughs == "Lambeth"), cor.test(imd_score, ethnicdensityscore))
with(subset(edclean, ethnicity == "White" & LSOA_4boroughs == "Lambeth"), cor.test(imd_score, ethnicdensityscore))
with(subset(edclean, ethnicity == "White" & LSOA_4boroughs == "Other"), cor.test(imd_score, ethnicdensityscore))
table(edclean$LSOA_4boroughs)
with(subset(edclean, ethnicity == "White" & LSOA_4boroughs == "OTHER"), cor.test(imd_score, ethnicdensityscore))
ggplot(aes(y = ethnicdensityscore, x = as.factor(Suicide)), data = edclean) +
geom_boxplot()
plotmeans(ethnicdensityscore~Suicide, data = edclean, xlab="Suicide",
ylab="EthnicdensityScore", main="Mean Plot\nwith 95% CI")
with(edclean, var.test(ethnicdensityscore[Suicide == 0], ethnicdensityscore[Suicide == 1], conf.level = 0.95))
with(edclean, t.test(ethnicdensityscore[Suicide == 1], ethnicdensityscore[Suicide == 0], conf.level = 0.95, paired = FALSE))
with(edclean, t.test(ethnicdensityscore[Suicide == 0], ethnicdensityscore[Suicide == 1], conf.level = 0.95, paired = FALSE))
edclean.white <- edclean %>% filter(ethnicity == "White")
full.model <- glm(Suicide ~ ethnicdensityscore + Marital_Cleaned + imd_score + LSOA_4boroughs + Gender_Cleaned + ageatdiagnosis + ethnicity, data = edclean.white, family = "binomial")
full.model <- glm(Suicide ~ ethnicdensityscore + Marital_Cleaned + imd_score + LSOA_4boroughs + Gender_Cleaned + ageatdiagnosis, data = edclean.white, family = "binomial")
summary(full.model)
str(edclean.white)
edclean.white.partition <- createDataPartition(edclean.white$Suicide, p=0.6, list = FALSE)
training.set <- edclean[edclean.white.partition, ]
testing.set <- edclean[-edclean.white.partition, ]
full.model.train <- train(Suicide ~ ethnicdensityscore + Marital_Cleaned + imd_score + LSOA_4boroughs + Gender_Cleaned + ageatdiagnosis, data = training.set, method = "glm", family = "binomial")
predict(full.model.train, newdata = testing.set, type = "response")
predict(full.model.train, newdata = testing.set)
predict(full.model.train, newdata = testing.set)
table(training.set$Suicicde)
table(training.set$Suicide)
table(testing.set$Suicide)
edclean.white.partition <- createDataPartition(edclean.white$Suicide, p=0.4, list = FALSE)
training.set <- edclean[edclean.white.partition, ]
testing.set <- edclean[-edclean.white.partition, ]
full.model <- glm(Suicide ~ ethnicdensityscore + Marital_Cleaned + imd_score + LSOA_4boroughs + Gender_Cleaned + ageatdiagnosis, data = edclean.white, family = "binomial")
summary(full.model)
predict(full.model, newdata = testing.set)
head(predict(full.model, newdata = testing.set))
predict(full.model.train, newdata = testing.set, type = "response")
predict(full.model, newdata = testing.set, type = "response")
head(predict(full.model, newdata = testing.set, type = "response"))
blurgh <- predict(full.model, newdata = testing.set, type = "response")
str(blurgh)
head(predict(full.model, newdata = testing.set, type = "response"))
edclean[c(3,4, 11, 12, 13, 14), "Suicide"]
blurgh <- predict(full.model, newdata = testing.set, type = "response")
table(testing.set$Suicide, blurgh > 0.5)
36151+0/36151+0+204+0
(36151+0)/(36151+0+204+0)
204/(36151+0+204+0)
testing.set$Suicide
table(testing.set$Suicide)
204/(36151+0+204+0)
str(edclean.white)
library(DMwR)
trainSplit <- SMOTE(Suicide ~ ., trainSplit, perc.over = 100, perc.under=200)
training.set$Suicide <- as.factor(training.set$Suicide)
training.set <- SMOTE(Suicide ~ ., training.set, perc.over = 100, perc.under=200)
training.set$Suicide <- as.numeric(training.set$Suicide)
prop.table(table(training.set$Suicide))
table(training.set$Suicide)
edclean.white <- edclean %>% filter(ethnicity == "White")
edclean.white.partition <- createDataPartition(edclean.white$Suicide, p=0.4, list = FALSE)
training.set <- edclean[edclean.white.partition, ]
testing.set <- edclean[-edclean.white.partition, ]
training.set$Suicide <- as.factor(training.set$Suicide)
training.set <- SMOTE(Suicide ~ ., training.set, perc.over = 200, perc.under=200)
training.set$Suicide <- as.numeric(training.set$Suicide)
table(training.set$Suicide)
edclean.white <- edclean %>% filter(ethnicity == "White")
#******************
edclean.white.partition <- createDataPartition(edclean.white$Suicide, p=0.4, list = FALSE)
training.set <- edclean[edclean.white.partition, ]
testing.set <- edclean[-edclean.white.partition, ]
training.set$Suicide <- as.factor(training.set$Suicide)
training.set <- SMOTE(Suicide ~ ., training.set, perc.over = 50, perc.under=200)
training.set$Suicide <- as.numeric(training.set$Suicide)
table(training.set$Suicide)
edclean.white <- edclean %>% filter(ethnicity == "White")
#******************
edclean.white.partition <- createDataPartition(edclean.white$Suicide, p=0.4, list = FALSE)
training.set <- edclean[edclean.white.partition, ]
testing.set <- edclean[-edclean.white.partition, ]
training.set$Suicide
table(training.set$Suicide)
training.set$Suicide <- as.factor(training.set$Suicide)
training.set <- SMOTE(Suicide ~ ., training.set, perc.over = 50, perc.under=400)
training.set$Suicide <- as.numeric(training.set$Suicide)
table(training.set$Suicide)
prop.table(table(training.set$Suicide))
edclean.white <- edclean %>% filter(ethnicity == "White")
#******************
edclean.white.partition <- createDataPartition(edclean.white$Suicide, p=0.4, list = FALSE)
training.set <- edclean[edclean.white.partition, ]
testing.set <- edclean[-edclean.white.partition, ]
training.set$Suicide <- as.factor(training.set$Suicide)
training.set <- SMOTE(Suicide ~ ., training.set, perc.over = 100, perc.under=400)
training.set$Suicide <- as.numeric(training.set$Suicide)
table(training.set$Suicide)
prop.table(table(training.set$Suicide))
training.set <- SMOTE(Suicide ~ ., training.set, perc.over = 100, perc.under=200)
training.set$Suicide <- as.numeric(training.set$Suicide)
table(training.set$Suicide)
training.set <- SMOTE(Suicide ~ ., training.set, perc.over = 100, perc.under=200)
training.set$Suicide <- as.numeric(training.set$Suicide)
table(training.set$Suicide)
training.set <- SMOTE(Suicide ~ ., training.set, perc.over = 100, perc.under=2000)
training.set$Suicide <- as.numeric(training.set$Suicide)
table(training.set$Suicide)
prop.table(table(training.set$Suicide))
library(DMwR)
detach("package:DMwR", unload=TRUE)
library("DMwR", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
training.set <- SMOTE(Suicide ~ ., training.set, perc.over = 100, perc.under=2000)
table(training.set$Suicide)
prop.table(table(training.set$Suicide))
edclean.white <- edclean %>% filter(ethnicity == "White")
edclean.white.partition <- createDataPartition(edclean.white$Suicide, p=0.4, list = FALSE)
training.set <- edclean[edclean.white.partition, ]
testing.set <- edclean[-edclean.white.partition, ]
table(training.set$Suicide)
training.set <- SMOTE(Suicide ~ ., training.set, perc.over = 100, perc.under=2000)
edclean.vars <-  edclean %>% select(ethnicity, ethnicdensityscore, Suicide, ageatdiagnosis, agegroups, Marital_Cleaned, imd_score, LSOA_4boroughs)
edclean.white <- edclean.vars %>% filter(ethnicity == "White")
edclean.white.partition <- createDataPartition(edclean.white$Suicide, p=0.4, list = FALSE)
training.set <- edclean[edclean.white.partition, ]
full.model <- glm(Suicide ~ ethnicdensityscore + Marital_Cleaned + imd_score + LSOA_4boroughs + Gender_Cleaned + ageatdiagnosis, data = edclean.white, family = "binomial")
summary(full.model)
table(testing.set$Suicide, blurgh > 0.9)
table(testing.set$Suicide, blurgh > 0.99)
table(testing.set$Suicide, blurgh > 0.1)
table(testing.set$Suicide, blurgh > 0.01)
table(testing.set$Suicide, blurgh > 0.001)
table(testing.set$Suicide, blurgh > 0.01)
table(testing.set$Suicide, blurgh > 0.02)
table(testing.set$Suicide, blurgh > 0.023)
table(testing.set$Suicide, blurgh > 0.04)
table(testing.set$Suicide, blurgh > 0.01)
table(testing.set$Suicide, blurgh > 0.012)
table(testing.set$Suicide, blurgh > 0.001)
table(testing.set$Suicide, blurgh > 0.011)
table(testing.set$Suicide, blurgh > 0.0111)
table(testing.set$Suicide, blurgh > 0.0112)
table(testing.set$Suicide, blurgh > 0.011)
table(testing.set$Suicide, blurgh > 0.0101)
table(testing.set$Suicide, blurgh > 0.01001)
table(testing.set$Suicide, blurgh > 0.010001)
table(testing.set$Suicide, blurgh > 0.0100012)
table(testing.set$Suicide, blurgh > 0.01000121)
table(testing.set$Suicide, blurgh > 0.01)
table(testing.set$Suicide, blurgh > 0.1)
table(testing.set$Suicide, blurgh > 0.01)
(36151+41)/(32155+41+4007+152)
193/(32155+41+4007+152) # it is not very good at predicting suicides 0.0056
head(blurgh)
training.set$Suicide <- as.factor(training.set$Suicide)
training.set <- SMOTE(Suicide ~ ., training.set, perc.over = 100, perc.under=200)
training.set$Suicide <- as.numeric(training.set$Suicide)
table(training.set$Suicide)
edclean.white <- edclean.vars %>% filter(ethnicity == "White")
#*********
str(edclean.white)
training.set$ethnicity <- as.factor(training.set$ethnicity)
training.set$agegroups <- as.factor(training.set$agegroups)
training.set$Marital_Cleaned <- as.factor(training.set$Marital_Cleaned)
training.set$LSOA_4boroughs <- as.factor(training.set$LSOA_4boroughs)
training.set <- SMOTE(Suicide ~ ., training.set, perc.over = 100, perc.under=200)
training.set <- SMOTE(Suicide ~ ethnicdensityscore + Marital_Cleaned + imd_score + LSOA_4boroughs + Gender_Cleaned + ageatdiagnosis, training.set, perc.over = 100, perc.under=200)
edclean.vars <-  edclean %>% select(ethnicity, ethnicdensityscore, Suicide, ageatdiagnosis, agegroups, Marital_Cleaned, imd_score, LSOA_4boroughs, Gender_Cleaned)
edclean.white <- edclean.vars %>% filter(ethnicity == "White")
edclean.white.partition <- createDataPartition(edclean.white$Suicide, p=0.4, list = FALSE)
training.set <- edclean[edclean.white.partition, ]
testing.set <- edclean[-edclean.white.partition, ]
full.model <- glm(Suicide ~ ethnicdensityscore + Marital_Cleaned + imd_score + LSOA_4boroughs + Gender_Cleaned + ageatdiagnosis, data = edclean.white, family = "binomial")
summary(full.model)
full.model.train <- train(Suicide ~ ethnicdensityscore + Marital_Cleaned + imd_score + LSOA_4boroughs + Gender_Cleaned + ageatdiagnosis, data = training.set, method = "glm", family = "binomial")
head(predict(full.model, newdata = testing.set))
head(predict(full.model.train, newdata = testing.set))
head(predict(full.model, newdata = testing.set))
blurgh <- predict(full.model, newdata = testing.set, type = "response")
edclean[c(2,4, 7, 12, 13, 16), "Suicide"]
blurgh %>% head(20)
blurgh %>% head(30)
blurgh %>% head(50)
blurgh %>% head(60)
blurgh %>% head(100)
blurgh %>% summary()
which(blurgh == 0.024640)
str(blurgh)
names(blurgh)
blurgh %>% summarise()
blurgh %>% summary()
training.set$Gender_Cleaned <- as.factor(training.set$Gender_Cleaned)
training.set$ethnicity <- as.factor(training.set$ethnicity)
training.set$agegroups <- as.factor(training.set$agegroups)
training.set$Marital_Cleaned <- as.factor(training.set$Marital_Cleaned)
training.set$LSOA_4boroughs <- as.factor(training.set$LSOA_4boroughs)
training.set$Gender_Cleaned <- as.factor(training.set$Gender_Cleaned)
table(training.set$Gender_Cleaned)
table(training.set$agegroups)
table(training.set$LSOA_4boroughs)
with(subset(edclean, ethnicity == "White" & LSOA_4boroughs == "SOUTHWARK"), cor.test(imd_score, ethnicdensityscore))
table(testing.set$LSOA_4boroughs)
set.seed(1234)
edclean.vars <-  edclean %>% select(ethnicity, ethnicdensityscore, Suicide, ageatdiagnosis, agegroups, Marital_Cleaned, imd_score, LSOA_4boroughs, Gender_Cleaned)
edclean.white <- edclean.vars %>% filter(ethnicity == "White")
#******************
edclean.white.partition <- createDataPartition(edclean.white$Suicide, p=0.4, list = FALSE)
training.set <- edclean[edclean.white.partition, ]
testing.set <- edclean[-edclean.white.partition, ]
full.model <- glm(Suicide ~ ethnicdensityscore + Marital_Cleaned + imd_score + LSOA_4boroughs + Gender_Cleaned + ageatdiagnosis, data = edclean.white, family = "binomial")
summary(full.model)
blurgh <- predict(full.model, newdata = testing.set, type = "response")
blurgh %>% summary()
training.set$ethnicity <- as.factor(training.set$ethnicity)
training.set$agegroups <- as.factor(training.set$agegroups)
training.set$Marital_Cleaned <- as.factor(training.set$Marital_Cleaned)
training.set$LSOA_4boroughs <- as.factor(training.set$LSOA_4boroughs)
training.set$Gender_Cleaned <- as.factor(training.set$Gender_Cleaned)
training.set$Suicide <- as.factor(training.set$Suicide)
training.set.balanced <- SMOTE(Suicide ~ ethnicdensityscore + Marital_Cleaned + imd_score + LSOA_4boroughs + Gender_Cleaned + agegroups, training.set, perc.over = 100, perc.under=200)
training.set$Suicide <- as.numeric(training.set$Suicide)
table(training.set$Suicide)
prop.table(table(training.set$Suicide))
table(testing.set$LSOA_4boroughs)
table(training.set$LSOA_4boroughs)
str(training.set)
training.set <- edclean.white[edclean.white.partition, ]
testing.set <- edclean.white[-edclean.white.partition, ]
training.set$ethnicity <- as.factor(training.set$ethnicity)
training.set$agegroups <- as.factor(training.set$agegroups)
training.set$Marital_Cleaned <- as.factor(training.set$Marital_Cleaned)
training.set$LSOA_4boroughs <- as.factor(training.set$LSOA_4boroughs)
training.set$Gender_Cleaned <- as.factor(training.set$Gender_Cleaned)
library(DMwR)
training.set$Suicide <- as.factor(training.set$Suicide)
training.set.balanced <- SMOTE(Suicide ~ ethnicdensityscore + Marital_Cleaned + imd_score + LSOA_4boroughs + Gender_Cleaned + agegroups, training.set, perc.over = 100, perc.under=200)
training.set$Suicide <- as.numeric(training.set$Suicide)
table(training.set$Suicide)
prop.table(table(training.set$Suicide))
str(testing.set)
training.set.balanced <- SMOTE(Suicide ~ ethnicdensityscore + Marital_Cleaned + imd_score + LSOA_4boroughs + Gender_Cleaned + agegroups, training.set, perc.over = 100, perc.under=2000)
table(training.set$Suicide)
table(training.set.balanced$Suicide)
prop.table(table(training.set.balanced$Suicide))
table(training.set$Suicide)
training.set$Suicide <- as.factor(training.set$Suicide)
training.set.balanced <- SMOTE(Suicide ~ ethnicdensityscore + Marital_Cleaned + imd_score + LSOA_4boroughs + Gender_Cleaned + agegroups, training.set, perc.over = 100, perc.under=200)
training.set$Suicide <- as.numeric(training.set$Suicide)
training.set.balanced$Suicide <- as.numeric(training.set.balanced$Suicide)
table(training.set.balanced$Suicide)
prop.table(table(training.set.balanced$Suicide))
set.seed(724)
#*****************
edclean.vars <-  edclean %>% select(ethnicity, ethnicdensityscore, Suicide, ageatdiagnosis, agegroups, Marital_Cleaned, imd_score, LSOA_4boroughs, Gender_Cleaned)
edclean.white <- edclean.vars %>% filter(ethnicity == "White")
edclean.white.partition <- createDataPartition(edclean.white$Suicide, p=0.4, list = FALSE)
training.set <- edclean.white[edclean.white.partition, ]
testing.set <- edclean.white[-edclean.white.partition, ]
training.set$ethnicity <- as.factor(training.set$ethnicity)
training.set$agegroups <- as.factor(training.set$agegroups)
training.set$Marital_Cleaned <- as.factor(training.set$Marital_Cleaned)
training.set$LSOA_4boroughs <- as.factor(training.set$LSOA_4boroughs)
training.set$Gender_Cleaned <- as.factor(training.set$Gender_Cleaned)
library(DMwR)
training.set$Suicide <- as.factor(training.set$Suicide)
training.set.balanced <- SMOTE(Suicide ~ ethnicdensityscore + Marital_Cleaned + imd_score + LSOA_4boroughs + Gender_Cleaned + agegroups, training.set, perc.over = 100, perc.under=200)
training.set.balanced$Suicide <- as.numeric(training.set.balanced$Suicide)
table(training.set.balanced$Suicide)
prop.table(table(training.set.balanced$Suicide))
full.model <- glm(Suicide ~ ethnicdensityscore + Marital_Cleaned + imd_score + LSOA_4boroughs + Gender_Cleaned + ageatdiagnosis, data = training.set.balanced, family = "binomial")
training.set.balanced$Suicide <- as.numeric(training.set.balanced$Suicide)
table(training.set.balanced$Suicide)
set.seed(724)
#*****************
edclean.vars <-  edclean %>% select(ethnicity, ethnicdensityscore, Suicide, ageatdiagnosis, agegroups, Marital_Cleaned, imd_score, LSOA_4boroughs, Gender_Cleaned)
edclean.white <- edclean.vars %>% filter(ethnicity == "White")
#******************
edclean.white.partition <- createDataPartition(edclean.white$Suicide, p=0.4, list = FALSE)
training.set <- edclean.white[edclean.white.partition, ]
testing.set <- edclean.white[-edclean.white.partition, ]
training.set$ethnicity <- as.factor(training.set$ethnicity)
training.set$agegroups <- as.factor(training.set$agegroups)
training.set$Marital_Cleaned <- as.factor(training.set$Marital_Cleaned)
training.set$LSOA_4boroughs <- as.factor(training.set$LSOA_4boroughs)
training.set$Gender_Cleaned <- as.factor(training.set$Gender_Cleaned)
training.set$Suicide <- as.factor(training.set$Suicide)
training.set.balanced <- SMOTE(Suicide ~ ., training.set, perc.over = 100, perc.under=200)
training.set.balanced$Suicide <- as.numeric(training.set.balanced$Suicide)
table(training.set.balanced$Suicide)
prop.table(table(training.set.balanced$Suicide))
edclean.white$Suicide
table(edclean.white$Suicide)
table(training.set$Suicide)
table(testing.set$Suicide)
table(training.set.balanced$Suicide)
training.set.balanced <- SMOTE(Suicide ~ ., training.set, perc.over = 50, perc.under=200)
table(training.set.balanced$Suicide)
training.set$Suicide <- as.factor(training.set$Suicide)
training.set.balanced <- SMOTE(Suicide ~ ., training.set, perc.over = 50, perc.under=200)
training.set.balanced$Suicide <- as.numeric(training.set.balanced$Suicide)
table(training.set.balanced$Suicide)
training.set$Suicide <- as.factor(training.set$Suicide)
training.set.balanced <- SMOTE(Suicide ~ ., training.set, perc.over = 100, perc.under=200)
training.set.balanced$Suicide <- as.numeric(training.set.balanced$Suicide)
table(training.set.balanced$Suicide)
full.model <- glm(Suicide ~ ethnicdensityscore + Marital_Cleaned + imd_score + LSOA_4boroughs + Gender_Cleaned + ageatdiagnosis, data = training.set.balanced, family = "binomial")
training.set.balanced$Suicide[training.set.balanced$Suicide == 1] <- 0
training.set.balanced$Suicide[training.set.balanced$Suicide == 2] <- 1
full.model <- glm(Suicide ~ ethnicdensityscore + Marital_Cleaned + imd_score + LSOA_4boroughs + Gender_Cleaned + ageatdiagnosis, data = training.set.balanced, family = "binomial")
summary(full.model)
full.model <- glm(Suicide ~ ethnicdensityscore + Marital_Cleaned + imd_score + LSOA_4boroughs + Gender_Cleaned + agegroups, data = training.set.balanced, family = "binomial")
summary(full.model)
full.model.fewer.vars <- glm(Suicide ~ ethnicdensityscore + imd_score + Gender_Cleaned + agegroups, data = training.set.balanced, family = "binomial")
summary(full.model.fewer.vars)
anova(full.model, full.model.fewer.vars, test ="Chisq")
library(lmtest)
lrtest(full.model, full.model.fewer.vars)
pR2(full.model)
library(pscl)
pR2(full.model.fewer.vars)
pR2(full.model)
varImp(full.model)
varImp(full.model.fewer.vars)
blurgh <- predict(full.model, newdata = testing.set, type = "response")
table(testing.set$Suicide, blurgh > 0.5)
9941+55/9941+50+51+6713
(9941+55)/(9941+50+51+6713)
blurgh <- predict(full.model.fewer.vars, newdata = testing.set, type = "response")
table(testing.set$Suicide, blurgh > 0.5)
(9532+62)/(9532+62+43+7122)
ctrl <- trainControl(method = "repeatedcv", number = 10, savePredictions = TRUE)
mod_fit <- train(Suicide ~ ethnicdensityscore + Marital_Cleaned + imd_score + LSOA_4boroughs + Gender_Cleaned + agegroups,  data = training.set.balanced, method="glm", family="binomial",
trControl = ctrl, tuneLength = 5)
mod_fit <- glm(Suicide ~ ethnicdensityscore + Marital_Cleaned + imd_score + LSOA_4boroughs + Gender_Cleaned + agegroups,  data = training.set.balanced, family="binomial", trControl = ctrl, tuneLength = 5)
mod_fit <- train(Suicide ~ ethnicdensityscore + Marital_Cleaned + imd_score + LSOA_4boroughs + Gender_Cleaned + agegroups,  data = training.set.balanced, method = "glm", family="binomial", trControl = ctrl, tuneLength = 5)
training.set.balanced$Suicide
training.set.balanced$Suicide <- as.factor(training.set.balanced$Suicide)
mod_fit <- train(Suicide ~ ethnicdensityscore + Marital_Cleaned + imd_score + LSOA_4boroughs + Gender_Cleaned + agegroups,  data = training.set.balanced, method = "glm", family="binomial", trControl = ctrl, tuneLength = 5)
pred = predict(mod_fit, newdata=testing.set)
confusionMatrix(data=pred, testing.set$Suicide)
confusionMatrix(data=pred, testing.set$Suicide, positive="1")
library(pROC)
f1 = roc(Suicide ~ ethnicdensityscore, data=training.set.balanced)
plot(f1, col="red")
library(ROCR)
prob <- predict(mod_fit, newdata=testing.set, type="response")
prob <- predict(full.model, newdata=testing.set, type="response")
pred <- prediction(prob, testing.set$Suicide)
perf <- performance(pred, measure = "tpr", x.measure = "fpr")
plot(perf)
auc <- performance(pred, measure = "auc")
auc <- auc@y.values[[1]]
auc
plot(full.model)
varImp(full.model.fewer.vars)
varImp(full.model)
kable(LSOAethnicdensity[1:15,c("ethnicity", "ethnicitycleaned", "ethnicdensityscore", "LSOAsize", "trust.ed", "ratio")])
LSOAethnicdensity <- edclean %>%
select(ethnicdensityscore, ethnicity, imd_score, ageatdiagnosis, imd_quartiles, ethnicitycleaned, LSOA11, LSOA_4boroughs, Suicide, DeathBy, Gender_Cleaned, Marital_Cleaned, WhiteBrit_EDPercent, OtherWhite_EDPercent, African_EDPercent) %>% # pop ed.
group_by(LSOA11, ethnicity) %>%
mutate(ethcount = length(ethnicity)) %>%
group_by(LSOA11) %>%
mutate(LSOAsize = n(),
trust.ed = ((ethcount/LSOAsize)*100), # sample ed.
ratio = trust.ed/ethnicdensityscore) %>%
#filter(LSOAsize > 19) %>%
ungroup() %>%
distinct()
LSOAethnicdensity <- edclean %>%
select(ethnicdensityscore, ethnicity, imd_score, ageatdiagnosis, imd_quartiles, ethnicitycleaned, LSOA11, LSOA_4boroughs, Suicide, DeathBy, Gender_Cleaned, Marital_Cleaned, WhiteBrit_EDPercent, OtherWhite_EDPercent, African_EDPercent) %>% # pop ed.
group_by(LSOA11, ethnicity) %>%
mutate(ethcount = length(ethnicity)) %>%
group_by(LSOA11) %>%
mutate(LSOAsize = n(),
trust.ed = ((ethcount/LSOAsize)*100), # sample ed.
ratio = trust.ed/ethnicdensityscore) %>%
#filter(LSOAsize > 19) %>%
ungroup() %>%
distinct()
LSOAethnicdensity <- edclean %>%
select(ethnicdensityscore, ethnicity, imd_score, ageatdiagnosis, imd_quartiles, ethnicitycleaned, LSOA11, LSOA_4boroughs, Suicide, DeathBy, Gender_Cleaned, Marital_Cleaned, WhiteBrit_EDPercent, OtherWhite_EDPercent, African_EDPercent)
#Dataset 1: this dataset patient demographics, ethnic density score and other variables
edclean <- edclean %>% select(Gender_Cleaned,
DOB_Cleaned,
Marital_Cleaned,
primary_diagnosis,
diagnosisdate,
ageatdiagnosis,
Schizophrenia_Diag,
SchizoAffective_Diag,
Depressive_Diag,
SubAbuse_Diag,
Manic_Diag,
Bipolar_Diag,
ethnicitycleaned,
ethnicity,
ethnicdensityscore, # exposure
imd_score,
imd_quartiles,
dateofdeath,
Suicide,            # outcome
ageatdeath,
agegroups,
LSOA_4boroughs,
DeathBy,
LSOA11,
TotalResidentsInLSOA,
WhiteBrit_EDPercent,
WhiteIrish_EDPercent,
OtherWhite_EDPercent,
WhiteBlackCarib_EDPercent,
WhiteBlackAfri_EDPercent,
WhiteAsian_EDPercent,
OtherMixed_EDPercent,
BritIndian_EDPercent,
BritPakistani_EDPercent,
BritBangladeshi_EDPercent,
BritChinese_EDPercent,
OtherAsian_EDPercent,
African_EDPercent,
Caribbean_EDPercent,
OtherBlack_EDPercent)
# this is important before doing a logistic regression.
edclean$Suicide <- as.factor(edclean$Suicide)
